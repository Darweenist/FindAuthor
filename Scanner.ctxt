#BlueJ class context
comment0.target=Scanner
comment0.text=\n\ A\ Scanner\ is\ responsible\ for\ reading\ an\ input\ stream,\ one\ character\ at\ a\n\ time,\ and\ separating\ the\ input\ into\ tokens.\ \ A\ token\ is\ defined\ as\:\n\ \ 1.\ A\ 'word'\ which\ is\ defined\ as\ a\ non-empty\ sequence\ of\ characters\ that\ \n\ \ \ \ \ begins\ with\ an\ alpha\ character\ and\ then\ consists\ of\ alpha\ characters,\ \n\ \ \ \ \ numbers,\ the\ single\ quote\ character\ "'",\ or\ the\ hyphen\ character\ "-".\ \n\ \ 2.\ An\ 'end-of-sentence'\ delimiter\ defined\ as\ any\ one\ of\ the\ characters\ \n\ \ \ \ \ ".",\ "?",\ "\!".\n\ \ 3.\ An\ end-of-file\ token\ which\ is\ returned\ when\ the\ scanner\ is\ asked\ for\ a\n\ \ \ \ \ token\ and\ the\ input\ is\ at\ the\ end-of-file.\n\ \ 4.\ A\ phrase\ separator\ which\ consists\ of\ one\ of\ the\ characters\ ",","\:"\ or\n\ \ \ \ \ ";".\n\ \ 5.\ A\ digit.\n\ \ 6.\ Any\ other\ character\ not\ defined\ above.\n\ @author\ Mr.\ Page\n\ @author\ Dawson\ Chen\n\ @version\ 2/28/19\n
comment1.params=in
comment1.target=Scanner(java.io.Reader)
comment1.text=\n\ Constructor\ for\ Scanner\ objects.\ \ The\ Reader\ object\ should\ be\ one\ of\n\ \ 1.\ A\ StringReader\n\ \ 2.\ A\ BufferedReader\ wrapped\ around\ an\ InputStream\n\ \ 3.\ A\ BufferedReader\ wrapped\ around\ a\ FileReader\n\ \ The\ instance\ field\ for\ the\ Reader\ is\ initialized\ to\ the\ input\ parameter,\n\ \ and\ the\ endOfFile\ indicator\ is\ set\ to\ false.\ \ The\ currentChar\ field\ is\n\ \ initialized\ by\ the\ getNextChar\ method.\n\ @param\ in\ is\ the\ reader\ object\ supplied\ by\ the\ program\ constructing\n\ \ \ \ \ \ \ \ this\ Scanner\ object.\n
comment10.params=
comment10.target=boolean\ hasNextToken()
comment10.text=\n\ Gets\ whether\ there\ are\ more\ tokens\ in\ the\ input\ stream.\n\ @return\ true\ if\ there\ are\ more\ tokens\ in\ the\ input\ stream.\ \n\ There\ are\ more\ tokens\ if\ the\ input\ stream\ is\ not\ at\ end-of-file.\n
comment11.params=
comment11.target=Token\ nextToken()
comment11.text=\n\ Gets\ the\ next\ Token\ in\ the\ file\n\ @return\ the\ next\ Token\n
comment2.params=
comment2.target=void\ getNextChar()
comment2.text=\n\ The\ getNextChar\ method\ attempts\ to\ get\ the\ next\ character\ from\ the\ input\n\ stream.\ \ It\ sets\ the\ endOfFile\ flag\ true\ if\ the\ end\ of\ file\ is\ reached\ on\n\ the\ input\ stream.\ \ Otherwise,\ it\ reads\ the\ next\ character\ from\ the\ stream\n\ and\ converts\ it\ to\ a\ Java\ String\ object.\n\ postcondition\:\ The\ input\ stream\ is\ advanced\ one\ character\ if\ it\ is\ not\ at\n\ end\ of\ file\ and\ the\ currentChar\ instance\ field\ is\ set\ to\ the\ String\ \n\ representation\ of\ the\ character\ read\ from\ the\ input\ stream.\ \ The\ flag\n\ endOfFile\ is\ set\ true\ if\ the\ input\ stream\ is\ exhausted.\n
comment3.params=obj
comment3.target=void\ eat(java.lang.String)
comment3.text=\n\ Goes\ to\ the\ next\ character\ in\ the\ file\ by\ "eating"\ the\ current\ character\n\ @param\ obj\ is\ what\ is\ tested\ to\ be\ current\ character.\ If\ it\ is,\ then\n\ it\ is\ eaten.\n
comment4.params=s
comment4.target=boolean\ isLetter(java.lang.String)
comment4.text=\n\ Gets\ whether\ s\ is\ a\ letter\n\ @param\ s\ is\ the\ character\ to\ be\ tested\n\ @return\ true\ if\ s\ is\ a\ letter;\n\ otherwise,\ false\n
comment5.params=s
comment5.target=boolean\ isDigit(java.lang.String)
comment5.text=\n\ Gets\ whether\ s\ is\ a\ digit\n\ @param\ s\ is\ the\ character\ to\ be\ tested\n\ @return\ true\ if\ s\ is\ a\ digit;\n\ otherwise,\ false\n
comment6.params=s
comment6.target=boolean\ isSpecial(java.lang.String)
comment6.text=\n\ Gets\ whether\ s\ is\ none\ of\ the\ other\ listed\ characters\n\ @param\ s\ is\ the\ character\ to\ be\ tested\n\ @return\ true\ if\ s\ is\ none\ of\ the\ other\ listed\ characters\n
comment7.params=s
comment7.target=boolean\ isPhraseTerminator(java.lang.String)
comment7.text=\n\ Gets\ whether\ s\ is\ a\ colon,\ comma,\ or\ semicolon,\ which\ terminates\ phrases\n\ @param\ s\ is\ the\ character\ to\ be\ tested\n\ @return\ true\ if\ s\ is\ a\ phrase\ terminator\ listed\ above\n
comment8.params=s
comment8.target=boolean\ isSentenceTerminator(java.lang.String)
comment8.text=\n\ Gets\ whether\ s\ is\ a\ period,\ question\ mark,\ or\ exclamation\ point,\n\ which\ terminates\ sentences\n\ @param\ s\ is\ the\ character\ to\ be\ tested\n\ @return\ true\ if\ s\ is\ a\ sentence\ terminator\ listed\ above\n
comment9.params=s
comment9.target=boolean\ isWhiteSpace(java.lang.String)
comment9.text=\n\ Gets\ whether\ s\ is\ a\ white\ space\ like\ a\ space,\ next\ line,\ or\ tab\n\ @param\ s\ is\ the\ character\ to\ be\ tested\n\ @return\ true\ if\ s\ is\ a\ white\ space\ listed\ above\n
numComments=12
